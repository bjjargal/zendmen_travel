var o=(r,t,e)=>new Promise((n,l)=>{var s=i=>{try{a(e.next(i))}catch(d){l(d)}},p=i=>{try{a(e.throw(i))}catch(d){l(d)}},a=i=>i.done?n(i.value):Promise.resolve(i.value).then(s,p);a((e=e.apply(r,t)).next())});import{E as u,c as f,o as c,e as g,a as m,g as _,h as F}from"./index-DDp1eRUk.js";class y{constructor(){this.listeners={},this.failed=!1}on(t,e){this.listeners[t]=this.listeners[t]||[],this.listeners[t].push(e)}trigger(t,e){(this.listeners[t]||[]).forEach(l=>{l.call(this,e)})}upload(t,e){return new Promise((n,l)=>{let s=new XMLHttpRequest;s.upload.addEventListener("loadstart",()=>{this.trigger("start")}),s.upload.addEventListener("progress",i=>{i.lengthComputable&&this.trigger("progress",{uploaded:i.loaded,total:i.total})}),s.upload.addEventListener("load",()=>{this.trigger("finish")}),s.addEventListener("error",()=>{this.trigger("error"),l()}),s.onreadystatechange=()=>{if(s.readyState==XMLHttpRequest.DONE){let i;if(s.status===200){let d=null;try{d=JSON.parse(s.responseText)}catch(v){d=s.responseText}let h=d.message||d;n(h)}else if(s.status===403)i=JSON.parse(s.responseText);else{this.failed=!0;try{i=JSON.parse(s.responseText)}catch(d){}}i&&i.exc&&console.error(JSON.parse(i.exc)[0]),l(i)}};const p=e.upload_endpoint||"/api/method/upload_file";s.open("POST",p,!0),s.setRequestHeader("Accept","application/json"),window.csrf_token&&window.csrf_token!=="{{ csrf_token }}"&&s.setRequestHeader("X-Frappe-CSRF-Token",window.csrf_token);let a=new FormData;t&&a.append("file",t,t.name),a.append("is_private",e.private?"1":"0"),a.append("folder",e.folder||"Home"),e.file_url&&a.append("file_url",e.file_url),e.doctype&&a.append("doctype",e.doctype),e.docname&&a.append("docname",e.docname),e.fieldname&&a.append("fieldname",e.fieldname),e.method&&a.append("method",e.method),e.type&&a.append("type",e.type),e.optimize&&(a.append("optimize","1"),e.max_width&&a.append("max_width",e.max_width.toString()),e.max_height&&a.append("max_height",e.max_height.toString())),s.send(a)})}}const x={name:"FileUploader",props:{fileTypes:{type:[String,Array]},uploadArgs:{type:Object},validateFile:{type:Function,default:null}},data(){return{uploader:null,uploading:!1,uploaded:0,error:null,message:"",total:0,file:null,finishedUploading:!1}},computed:{progress(){let r=Math.floor(this.uploaded/this.total*100);return isNaN(r)?0:r},success(){return this.finishedUploading&&!this.error}},methods:{inputRef(){return this.$refs.input},openFileSelector(){this.$refs.input.click()},onFileAdd(r){return o(this,null,function*(){if(this.error=null,this.file=r.target.files[0],this.file&&this.validateFile)try{let t=yield this.validateFile(this.file);t&&(this.error=t)}catch(t){this.error=t}this.error||this.uploadFile(this.file)})},uploadFile(r){return o(this,null,function*(){this.error=null,this.uploaded=0,this.total=0,this.uploader=new y,this.uploader.on("start",()=>{this.uploading=!0}),this.uploader.on("progress",t=>{this.uploaded=t.uploaded,this.total=t.total}),this.uploader.on("error",()=>{this.uploading=!1,this.error="Error Uploading File"}),this.uploader.on("finish",()=>{this.uploading=!1,this.finishedUploading=!0}),this.uploader.upload(r,this.uploadArgs||{}).then(t=>{this.$emit("success",t)}).catch(t=>{this.uploading=!1;let e="Error Uploading File";t!=null&&t._server_messages?e=JSON.parse(JSON.parse(t._server_messages)[0]).message:t!=null&&t.exc&&(e=JSON.parse(t.exc)[0].split(`
`).slice(-2,-1)[0]),this.error=e,this.$emit("failure",t)})})}},expose:["inputRef"]},S=["accept"];function w(r,t,e,n,l,s){return c(),f("div",null,[g("input",{ref:"input",type:"file",accept:e.fileTypes,class:"hidden",onChange:t[0]||(t[0]=(...p)=>s.onFileAdd&&s.onFileAdd(...p))},null,40,S),m(r.$slots,"default",_(F({file:l.file,uploading:l.uploading,progress:s.progress,uploaded:l.uploaded,message:l.message,error:l.error,total:l.total,success:s.success,openFileSelector:s.openFileSelector})))])}const O=u(x,[["render",w]]);export{O as F};
//# sourceMappingURL=FileUploader-BhzMGNFW.js.map
